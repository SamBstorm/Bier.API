// <auto-generated />
using System;
using Bier.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bier.DataBase.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210629075228_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bier.Models.Brewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SocietyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Brewers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Belgium",
                            SocietyName = "AB inbev"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Belgium",
                            SocietyName = "Duvel Mortgat"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Nederland",
                            SocietyName = "Heineken"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Danemark",
                            SocietyName = "Carlsberg"
                        });
                });

            modelBuilder.Entity("Bier.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlcoholIntensity")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("BrewerId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrewerId");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlcoholIntensity = 5.5m,
                            BrewerId = 1,
                            Color = 0,
                            Name = "Jupiler",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            AlcoholIntensity = 0m,
                            BrewerId = 1,
                            Color = 0,
                            Name = "Jupiler 0",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            AlcoholIntensity = 6.2m,
                            BrewerId = 2,
                            Color = 0,
                            Name = "Duvel",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            AlcoholIntensity = 8m,
                            BrewerId = 2,
                            Color = 1,
                            Name = "Maredsous",
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            AlcoholIntensity = 4.5m,
                            BrewerId = 3,
                            Color = 0,
                            Name = "Heineken",
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            AlcoholIntensity = 4.5m,
                            BrewerId = 3,
                            Color = 2,
                            Name = "Heineken Special",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            AlcoholIntensity = 5m,
                            BrewerId = 4,
                            Color = 0,
                            Name = "Carlsberg",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Bier.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("VARBINARY(32)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("CHAR(36)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1987, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "samuel.legrain@bstorm.be",
                            FirstName = "Samuel",
                            LastName = "Legrain",
                            Password = new byte[] { 75, 106, 45, 246, 69, 176, 192, 197, 114, 36, 113, 113, 247, 139, 231, 164, 21, 207, 133, 208, 153, 69, 81, 85, 230, 82, 1, 175, 136, 116, 224, 249 },
                            Salt = "1b69b7fc-7927-4ec8-8e95-9a81d28a06e4"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1987, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.person@bstorm.be",
                            FirstName = "Michael",
                            LastName = "Person",
                            Password = new byte[] { 176, 86, 149, 165, 120, 181, 95, 93, 132, 188, 75, 8, 124, 26, 142, 85, 153, 167, 251, 2, 91, 79, 41, 69, 231, 135, 103, 147, 110, 253, 63, 148 },
                            Salt = "8178b65a-b667-409a-92a9-1afbadccfcbe"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1987, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khun.lee@bstorm.be",
                            FirstName = "Khun",
                            LastName = "Lee",
                            Password = new byte[] { 160, 232, 237, 18, 64, 207, 61, 54, 139, 219, 205, 224, 178, 17, 191, 114, 46, 188, 54, 71, 213, 164, 217, 184, 166, 228, 63, 50, 196, 162, 57, 196 },
                            Salt = "17709b40-6026-4250-9c87-e2dc2170d025"
                        });
                });

            modelBuilder.Entity("Bier.Models.Drink", b =>
                {
                    b.HasOne("Bier.Models.Brewer", "Brewer")
                        .WithMany("Drinks")
                        .HasForeignKey("BrewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewer");
                });

            modelBuilder.Entity("Bier.Models.Brewer", b =>
                {
                    b.Navigation("Drinks");
                });
#pragma warning restore 612, 618
        }
    }
}
