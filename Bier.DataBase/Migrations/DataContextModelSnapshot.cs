// <auto-generated />
using System;
using Bier.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bier.DataBase.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bier.Models.Brewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SocietyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Brewers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Belgium",
                            SocietyName = "AB inbev"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Belgium",
                            SocietyName = "Duvel Mortgat"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Nederland",
                            SocietyName = "Heineken"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Danemark",
                            SocietyName = "Carlsberg"
                        });
                });

            modelBuilder.Entity("Bier.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlcoholIntensity")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("BrewerId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrewerId");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlcoholIntensity = 5.5m,
                            BrewerId = 1,
                            Color = 0,
                            Name = "Jupiler",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            AlcoholIntensity = 0m,
                            BrewerId = 1,
                            Color = 0,
                            Name = "Jupiler 0",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            AlcoholIntensity = 6.2m,
                            BrewerId = 2,
                            Color = 0,
                            Name = "Duvel",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            AlcoholIntensity = 8m,
                            BrewerId = 2,
                            Color = 1,
                            Name = "Maredsous",
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            AlcoholIntensity = 4.5m,
                            BrewerId = 3,
                            Color = 0,
                            Name = "Heineken",
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            AlcoholIntensity = 4.5m,
                            BrewerId = 3,
                            Color = 2,
                            Name = "Heineken Special",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            AlcoholIntensity = 5m,
                            BrewerId = 4,
                            Color = 0,
                            Name = "Carlsberg",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Bier.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("VARBINARY(32)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("CHAR(36)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1987, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "samuel.legrain@bstorm.be",
                            FirstName = "Samuel",
                            LastName = "Legrain",
                            Password = new byte[] { 76, 234, 79, 27, 156, 200, 45, 216, 30, 63, 135, 157, 52, 24, 18, 101, 205, 108, 225, 162, 198, 164, 111, 176, 127, 193, 143, 148, 154, 245, 114, 150 },
                            Salt = "6c4f9fee-0592-4d3e-83cb-f6a5eb9a54d0"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1987, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.person@bstorm.be",
                            FirstName = "Michael",
                            LastName = "Person",
                            Password = new byte[] { 132, 224, 187, 241, 6, 73, 11, 187, 216, 55, 22, 236, 43, 231, 36, 60, 139, 66, 229, 1, 218, 126, 92, 97, 86, 81, 150, 255, 26, 143, 24, 94 },
                            Salt = "3624bfea-16b3-4234-9d2d-1a167f3dc81c"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1987, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khun.lee@bstorm.be",
                            FirstName = "Khun",
                            LastName = "Lee",
                            Password = new byte[] { 89, 149, 107, 81, 227, 173, 52, 192, 86, 39, 184, 39, 204, 64, 126, 46, 40, 119, 85, 154, 24, 34, 58, 163, 88, 228, 226, 170, 37, 65, 120, 26 },
                            Salt = "f9ea561a-7a1a-42c7-8fd7-8840e89531d8"
                        });
                });

            modelBuilder.Entity("Bier.Models.Drink", b =>
                {
                    b.HasOne("Bier.Models.Brewer", "Brewer")
                        .WithMany()
                        .HasForeignKey("BrewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewer");
                });
#pragma warning restore 612, 618
        }
    }
}
